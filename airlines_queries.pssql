-- select count(*) from bookings
use test

alter view aircrafts rename to vw_aircrafts;
alter view airports rename to vw_airpots;
alter view flights_v rename to vw_flights;
alter view routes rename to vw_routes;
--select distinct passenger_name namess from tickets --where passenger_name='ELENA ZAKHAROVA'-- limit 20

--select * from tickets limit 20 order by passenger_name

--select * from tickets limit 20
--select * from tickets where passenger_name in (select passenger_name from tickets limit 20) order by passenger_name
--create view vw_tickets_lim20 as select * from tickets limit 20;
--select * from vw_tickets_lim20 order by passenger_name
--select * from vw_tickets_lim20 order by passenger_name desc

--select fare_conditions,count(*) flights from ticket_flights group by fare_conditions order by flights

--select * from ticket_flights order by ticket_no desc limit 150

--select * from tickets where passenger_name='ELENA ZAKHAROVA'
--select * from tickets where book_ref='D3C4B3' --2.259 secs
--select * from tickets where ticket_no='0005432286543'
--select * from tickets where passenger_id='1167 485656' -- no index=2.313
--create index idx_temp_passengerid_in_tickets on tickets(passenger_id) WITH (deduplicate_items = off)
--drop index idx_temp_passengerid_in_tickets
--select * from tickets order by passenger_id limit 120
--select * from bookings order by book_ref limit 120
 --select * from ticket_flights where ticket_no > '0005435999870' order by ticket_no desc limit 120
 --select hashtext('')
--select pg_size_pretty(pg_relation_size('ticket_flights'))
--select pg_size_pretty(pg_relation_size('idx_temp_passengerid_in_tickets'))
--select pg_size_pretty(pg_indexes_size('ticket_flights'))
select pg_size_pretty(pg_indexes_size('tickets')) indexsize,
pg_size_pretty(pg_relation_size('tickets')) tablesize,
pg_size_pretty(pg_relation_size('idx_temp_passengerid_in_tickets')) specindexsize
--select hashtext('')
--select pg_size_pretty(pg_relation_size('ticket_flights'))
--select pg_size_pretty(pg_relation_size('idx_temp_passengerid_in_tickets'))
--select pg_size_pretty(pg_indexes_size('ticket_flights'))
-- select pg_size_pretty(pg_indexes_size('tickets')) indexsize,
-- pg_size_pretty(pg_relation_size('tickets')) tablesize,
-- pg_size_pretty(pg_relation_size('idx_temp_passengerid_in_tickets')) specindexsize
--vacuum analyze ticket_flights

SELECT tablename, attname, correlation
FROM pg_stats
WHERE tablename = 'ticket_flights';

select fare_conditions,count(*) as frequency from ticket_flights group by fare_conditions order by frequency

-- --select * from ticket_flights limit 200 offset 8000000

-- select * from ticket_flights where ticket_no='0005433750750'
-- --select * from flights limit 200

-- select * from tickets limit 200 offset 2000000

with first_level as (
 select * from tickets limit 200 offset 200
)
select * from first_level order by passenger_name

SELECT
   *
FROM
    pg_indexes
WHERE
    schemaname = 'bookings';
	
select pg_size_pretty(pg_indexes_size('ticket_flights_pkey')) indexsize

create table fare_conditions(
 fare_condition_id smallserial primary key,
 flight_class varchar(15)	
)
--select * from ticket_flights where fare_conditions='Economy' limit 200
--select distinct fare_conditions from seats
--select distinct fare_conditions as seat_class from ticket_flights limit 200

create table seat_classes(
 class_id smallserial primary key,
 class_name varchar(25)	
)
--alter table seat_class rename to seat_classes
select * from seat_classes

-- with classes as (
-- select distinct fare_conditions as seat_class from ticket_flights
-- )
-- insert into seat_classes(flight_class)
-- select * from classes

drop table seat_classes

alter table ticket_flights add column fare_condition_id smallint 
alter table ticket_flights add constraint fk_ticket_flights_seats 
foreign key (fare_condition_id) references seat_classes(class_id)

alter table seat_classes rename column class_name to flight_class

insert into seat_classes(flight_class) values('First Class')


with classes as (
select class_id,flight_class from seat_classes
)
insert into ticket_flights(fare_condition_id) 
select classes.class_id from classes where  tickets_flights.fare_conditions = classes.flight_class


-- create procedure proc_setFareIdForFareCondition(fareid int ,cond varchar)  AS $$
--    begin
--         update ticket_flights set fare_condition_id=fareid::smallint where fare_conditions=cond::varchar;
--    end;
-- $$ LANGUAGE plpgsql;


do $$
    declare r record;
    begin
        for r in select class_id,flight_class from seat_classes
        loop
            call proc_setFareIdForFareCondition(r.class_id,r.flight_class);
        end loop;
    end;
    $$

alter table tickets add constraint fk_passenger_id_troupers foreign key (passenger_id)
references troupers("Id")

create procedure proc_UpdateTicketTableWithPassengerId(passId varchar,) as $$
    declare r record;
    begin
        for r in select "Id",passenger_name from troupers where "Id"=passId
        loop
            update tickets set passenger_id=
            end loop;
end;

    $$